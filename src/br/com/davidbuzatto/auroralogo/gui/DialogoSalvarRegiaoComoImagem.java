/*
 * Copyright (C) 2022 Prof. Dr. David Buzatto
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package br.com.davidbuzatto.auroralogo.gui;

import br.com.davidbuzatto.auroralogo.utils.Utils;
import static br.com.davidbuzatto.auroralogo.utils.Utils.PREF_CAMINHO_ABRIR_SALVAR;
import static br.com.davidbuzatto.auroralogo.utils.Utils.getPref;
import static br.com.davidbuzatto.auroralogo.utils.Utils.setPref;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * Diálogo para salvar região do painel como imagem.
 * 
 * @author Prof. Dr. David Buzatto
 */
public class DialogoSalvarRegiaoComoImagem extends javax.swing.JDialog {
    
    private PainelDesenho painelDesenho;
    
    /**
     * Creates new form DialogoSalvarRegiaoComoImagem
     */
    public DialogoSalvarRegiaoComoImagem( java.awt.Frame parent, boolean modal, PainelDesenho painelDesenho ) {
        super( parent, modal );
        initComponents();
        this.painelDesenho = painelDesenho;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblX = new javax.swing.JLabel();
        lblY = new javax.swing.JLabel();
        lblLargura = new javax.swing.JLabel();
        lblAltura = new javax.swing.JLabel();
        spiX = new javax.swing.JSpinner();
        spiY = new javax.swing.JSpinner();
        spiLargura = new javax.swing.JSpinner();
        spiAltura = new javax.swing.JSpinner();
        lblMaxX = new javax.swing.JLabel();
        lblMaxY = new javax.swing.JLabel();
        lblMaxLargura = new javax.swing.JLabel();
        lblMaxAltura = new javax.swing.JLabel();
        painelBotoes = new javax.swing.JPanel();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Salvar Região Como Imagem");
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        lblX.setText("x:");

        lblY.setText("y:");

        lblLargura.setText("Largura:");

        lblAltura.setText("Altura:");

        lblMaxX.setText("0 a ");

        lblMaxY.setText("0 a ");

        lblMaxLargura.setText("1 a ");

        lblMaxAltura.setText("1 a ");

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/auroralogo/gui/icones/accept.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/auroralogo/gui/icones/cancel.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelBotoesLayout = new javax.swing.GroupLayout(painelBotoes);
        painelBotoes.setLayout(painelBotoesLayout);
        painelBotoesLayout.setHorizontalGroup(
            painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBotoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar)
                .addContainerGap())
        );
        painelBotoesLayout.setVerticalGroup(
            painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnSalvar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblX, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblY, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblLargura, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAltura, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(spiAltura, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(spiLargura)
                            .addComponent(spiY)
                            .addComponent(spiX))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMaxX, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                            .addComponent(lblMaxY, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMaxLargura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMaxAltura, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(painelBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblX)
                    .addComponent(lblMaxX)
                    .addComponent(spiX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblY)
                    .addComponent(lblMaxY)
                    .addComponent(spiY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLargura)
                    .addComponent(lblMaxLargura)
                    .addComponent(spiLargura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaxAltura)
                    .addComponent(spiAltura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAltura))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        
        File diretorioAtual = new File( getPref( PREF_CAMINHO_ABRIR_SALVAR ) );
        JFileChooser jfc = new JFileChooser( diretorioAtual );
        jfc.setDialogTitle( "Salvar Região Como Imagem..." );
        jfc.setMultiSelectionEnabled( false );
        jfc.removeChoosableFileFilter( jfc.getFileFilter() );
        jfc.setFileFilter( new FileNameExtensionFilter( "Arquivo de Imagem", "png" ) );

        if ( jfc.showSaveDialog( this ) == JFileChooser.APPROVE_OPTION ) {

            File arquivo = jfc.getSelectedFile();
            boolean salvar = true;

            if ( !arquivo.getName().endsWith( ".png" ) ) {
                arquivo = new File( arquivo.getAbsolutePath() + ".png" );
            }
            
            if ( arquivo.exists() ) {
                if ( JOptionPane.showConfirmDialog( null,
                        "O arquivo já existe, deseja sobrescrevê-lo?",
                        "Confirmação",
                        JOptionPane.YES_NO_OPTION ) == JOptionPane.NO_OPTION ) {
                    salvar = false;
                }
            }

            if ( salvar ) {

                setPref( PREF_CAMINHO_ABRIR_SALVAR, arquivo.getParentFile().getAbsolutePath() );

                int x = Integer.parseInt( spiX.getValue().toString() );
                int y = Integer.parseInt( spiY.getValue().toString() );
                int largura = Integer.parseInt( spiLargura.getValue().toString() );
                int altura = Integer.parseInt( spiAltura.getValue().toString() );
                
                System.out.println( x );
                System.out.println( largura );
                
                if ( x + largura > painelDesenho.getWidth() ) {
                    largura = painelDesenho.getWidth() - x;
                }
                
                if ( y + altura > painelDesenho.getHeight() ) {
                    altura = painelDesenho.getHeight() - y;
                }
                
                Utils.setIntPref( Utils.PREF_SALVAR_REGIAO_IMAGEM_X, x );
                Utils.setIntPref( Utils.PREF_SALVAR_REGIAO_IMAGEM_Y, y );
                Utils.setIntPref( Utils.PREF_SALVAR_REGIAO_IMAGEM_LARGURA, largura );
                Utils.setIntPref( Utils.PREF_SALVAR_REGIAO_IMAGEM_ALTURA, altura );
                
                BufferedImage img = new BufferedImage( painelDesenho.getWidth(), painelDesenho.getHeight(), BufferedImage.TYPE_INT_ARGB );
                painelDesenho.desenhar( (Graphics2D) img.createGraphics() );
                img = img.getSubimage( x, y, largura, altura );

                try {
                    ImageIO.write( img, "png", arquivo );
                } catch ( IOException exc ) {
                    exc.printStackTrace();
                }

            }

        }
        
        dispose();
        
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        reset();
    }//GEN-LAST:event_formComponentShown

    public void reset() {
        
        int maxX = painelDesenho.getWidth() - 1;
        int maxY = painelDesenho.getHeight() - 1;
        int maxLargura = painelDesenho.getWidth();
        int maxAltura = painelDesenho.getHeight();
        
        lblMaxX.setText( "0 a " + maxX );
        lblMaxY.setText( "0 a " + maxY );
        lblMaxLargura.setText( "1 a " + maxLargura );
        lblMaxAltura.setText( "1 a " + maxAltura );
        
        SpinnerModel modelX = new SpinnerNumberModel( Utils.getIntPref( Utils.PREF_SALVAR_REGIAO_IMAGEM_X ), 0, maxX, 1 );
        SpinnerModel modelY = new SpinnerNumberModel( Utils.getIntPref( Utils.PREF_SALVAR_REGIAO_IMAGEM_Y ), 0, maxY, 1 );
        SpinnerModel modelLargura = new SpinnerNumberModel( Utils.getIntPref( Utils.PREF_SALVAR_REGIAO_IMAGEM_LARGURA ), 0, maxLargura, 1 );
        SpinnerModel modelAltura = new SpinnerNumberModel( Utils.getIntPref( Utils.PREF_SALVAR_REGIAO_IMAGEM_ALTURA ), 0, maxAltura, 1 );
        
        spiX.setModel( modelX );
        spiY.setModel( modelY );
        spiLargura.setModel( modelLargura );
        spiAltura.setModel( modelAltura );
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel lblAltura;
    private javax.swing.JLabel lblLargura;
    private javax.swing.JLabel lblMaxAltura;
    private javax.swing.JLabel lblMaxLargura;
    private javax.swing.JLabel lblMaxX;
    private javax.swing.JLabel lblMaxY;
    private javax.swing.JLabel lblX;
    private javax.swing.JLabel lblY;
    private javax.swing.JPanel painelBotoes;
    private javax.swing.JSpinner spiAltura;
    private javax.swing.JSpinner spiLargura;
    private javax.swing.JSpinner spiX;
    private javax.swing.JSpinner spiY;
    // End of variables declaration//GEN-END:variables
}
