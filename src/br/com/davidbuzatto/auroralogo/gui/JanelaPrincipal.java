/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.davidbuzatto.auroralogo.gui;

import br.com.davidbuzatto.auroralogo.parser.AuroraLogoLexer;
import br.com.davidbuzatto.auroralogo.parser.AuroraLogoParser;
import br.com.davidbuzatto.auroralogo.parser.impl.DesenhistaAuroraLogoVisitor;
import br.com.davidbuzatto.auroralogo.utils.Utils;
import com.formdev.flatlaf.FlatIntelliJLaf;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.nio.charset.StandardCharsets;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.Scanner;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.antlr.v4.runtime.CharStreams;
import org.antlr.v4.runtime.CommonTokenStream;
import org.antlr.v4.runtime.RecognitionException;
import org.antlr.v4.runtime.tree.ParseTree;
import org.fife.ui.rsyntaxtextarea.AbstractTokenMakerFactory;
import org.fife.ui.rsyntaxtextarea.ErrorStrip;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaEditorKit;
import org.fife.ui.rsyntaxtextarea.Style;
import org.fife.ui.rsyntaxtextarea.SyntaxScheme;
import org.fife.ui.rsyntaxtextarea.TokenMakerFactory;
import org.fife.ui.rtextarea.RTextScrollPane;

/**
 *
 * @author David
 */
public class JanelaPrincipal extends javax.swing.JFrame {

    private RSyntaxTextArea textArea;
    private RTextScrollPane scrollPane;
    private Tartaruga tartaruga;
    private File arquivoAtual;

    /**
     * Creates new form JanelaPrincipal
     */
    public JanelaPrincipal() {

        initComponents();
        prepararTextArea();
        //setExtendedState( MAXIMIZED_BOTH );
        
        tartaruga = new Tartaruga( 
                painelDesenho.getWidth() / 2, 
                painelDesenho.getHeight() / 2, 
                0, 1, 
                Color.BLACK, 
                true, 
                painelDesenho );
        painelDesenho.setTartaruga( tartaruga );
        
        /*tartaruga.moverParaCima( 10 );
        tartaruga.moverParaDireita( 50 );
        tartaruga.trocarCor( Color.decode( "#ff0000" ) );
        tartaruga.moverParaBaixo( 100 );
        tartaruga.moverParaEsquerda( 40 );*/
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelCodigo = new javax.swing.JPanel();
        painelDesenho = new br.com.davidbuzatto.auroralogo.gui.PainelDesenho();
        barraFerramentas = new javax.swing.JToolBar();
        btnNovo = new javax.swing.JButton();
        btnAbrir = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        separador1 = new javax.swing.JToolBar.Separator();
        btnExecutar = new javax.swing.JButton();
        btnExecutarPasso = new javax.swing.JButton();
        separador2 = new javax.swing.JToolBar.Separator();
        btnSobre = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aurora Logo");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        painelCodigo.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout painelDesenhoLayout = new javax.swing.GroupLayout(painelDesenho);
        painelDesenho.setLayout(painelDesenhoLayout);
        painelDesenhoLayout.setHorizontalGroup(
            painelDesenhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 747, Short.MAX_VALUE)
        );
        painelDesenhoLayout.setVerticalGroup(
            painelDesenhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/auroralogo/gui/icones/page_white_add.png"))); // NOI18N
        btnNovo.setFocusable(false);
        btnNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        barraFerramentas.add(btnNovo);

        btnAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/auroralogo/gui/icones/folder.png"))); // NOI18N
        btnAbrir.setFocusable(false);
        btnAbrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAbrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });
        barraFerramentas.add(btnAbrir);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/auroralogo/gui/icones/disk.png"))); // NOI18N
        btnSalvar.setFocusable(false);
        btnSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        barraFerramentas.add(btnSalvar);
        barraFerramentas.add(separador1);

        btnExecutar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/auroralogo/gui/icones/script_go.png"))); // NOI18N
        btnExecutar.setFocusable(false);
        btnExecutar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExecutar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecutarActionPerformed(evt);
            }
        });
        barraFerramentas.add(btnExecutar);

        btnExecutarPasso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/auroralogo/gui/icones/clock_go.png"))); // NOI18N
        btnExecutarPasso.setFocusable(false);
        btnExecutarPasso.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExecutarPasso.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExecutarPasso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecutarPassoActionPerformed(evt);
            }
        });
        barraFerramentas.add(btnExecutarPasso);
        barraFerramentas.add(separador2);

        btnSobre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/auroralogo/gui/icones/help.png"))); // NOI18N
        btnSobre.setFocusable(false);
        btnSobre.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSobre.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSobreActionPerformed(evt);
            }
        });
        barraFerramentas.add(btnSobre);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelDesenho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(barraFerramentas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(barraFerramentas, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
                    .addComponent(painelDesenho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        
        salvarArquivo( arquivoAtual );
        arquivoAtual = null;
        carregarTemplate( "novoArquivo", false );
        
        tartaruga.limpar();
        painelDesenho.repaint();
        
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed
        
        salvarArquivo( arquivoAtual );
        
        File diretorioAtual = new File( Utils.getPref( "CAMINHO_ABRIR_SALVAR" ) );
        JFileChooser jfc = new JFileChooser( diretorioAtual );
        jfc.setDialogTitle( "Abrir..." );
        jfc.setMultiSelectionEnabled( false );
        jfc.removeChoosableFileFilter( jfc.getFileFilter() );
        jfc.setFileFilter( new FileNameExtensionFilter( "Arquivo AuroraLogo" , "aulg" ) );

        if ( jfc.showOpenDialog( this ) == JFileChooser.APPROVE_OPTION ) {

            File arquivo = jfc.getSelectedFile();
            arquivoAtual = arquivo;
            carregarArquivo( arquivo, true );

        }
        
    }//GEN-LAST:event_btnAbrirActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        
        if ( arquivoAtual == null ) {
            
            File diretorioAtual = new File( Utils.getPref( "CAMINHO_ABRIR_SALVAR" ) );
            JFileChooser jfc = new JFileChooser( diretorioAtual );
            jfc.setDialogTitle( "Salvar..." );
            jfc.setMultiSelectionEnabled( false );
            jfc.removeChoosableFileFilter( jfc.getFileFilter() );
            jfc.setFileFilter( new FileNameExtensionFilter( "Arquivo AuroraLogo" , "aulg" ) );
            
            if ( jfc.showSaveDialog( this ) == JFileChooser.APPROVE_OPTION ) {
                
                File arquivo = jfc.getSelectedFile();
                boolean salvar = true;

                if ( arquivo.exists() ) {
                    if ( JOptionPane.showConfirmDialog( null, 
                            "O arquivo já existe, deseja sobrescrevê-lo?", 
                            "Confirmação", 
                            JOptionPane.YES_NO_OPTION ) == JOptionPane.NO_OPTION ) {
                        salvar = false;
                    }
                } else {
                    if ( !arquivo.getName().endsWith( ".aulg" ) ) {
                        arquivo = new File( arquivo.getAbsolutePath() + ".aulg" );
                    }
                }

                if ( salvar ) {
                    
                    Utils.setPref( "CAMINHO_ABRIR_SALVAR", arquivo.getParentFile().getAbsolutePath() );
                    arquivoAtual = arquivo;
                    
                }
                
            }
            
        }
        
        salvarArquivo( arquivoAtual );
        
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnExecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecutarActionPerformed
        
        salvarArquivo( arquivoAtual );
        tartaruga.setEstadoAtual( 0 );
        tartaruga.setPassoAPasso( false );
        executarCodigo();
        painelDesenho.repaint();
        
    }//GEN-LAST:event_btnExecutarActionPerformed

    private void btnExecutarPassoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecutarPassoActionPerformed
        
        salvarArquivo( arquivoAtual );
        tartaruga.setEstadoAtual( 0 );
        tartaruga.setPassoAPasso( true );
        executarCodigo();
        
        new Thread( new Runnable() {
            @Override
            public void run() {
                while ( !tartaruga.estadoFinal() ) {
                    EventQueue.invokeLater( new Runnable() {
                        public void run() {
                            tartaruga.proximoEstado();
                            painelDesenho.repaint();
                        }
                    });
                    try {
                        Thread.sleep( 10 );
                    } catch ( InterruptedException exc ) {
                    }
                }
            }
        }).start();
        
        painelDesenho.repaint();
        
    }//GEN-LAST:event_btnExecutarPassoActionPerformed

    private void btnSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSobreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSobreActionPerformed

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        
        tartaruga.atualizarPosicaoEstadoInicial( painelDesenho.getWidth() / 2, painelDesenho.getHeight() / 2 );
        
        if ( !tartaruga.estadoInicial() ) {
            executarCodigo();
        }
        
        painelCodigo.repaint();
        
    }//GEN-LAST:event_formComponentResized

    private void prepararTextArea() {

        textArea = criarTextArea();
        
        AbstractTokenMakerFactory atmf = (AbstractTokenMakerFactory) TokenMakerFactory.getDefaultInstance();
        atmf.putMapping( "text/AuroraLogo", "br.com.davidbuzatto.auroralogo.gui.sh.AuroraLogoSyntaxHighlighter");
        textArea.setSyntaxEditingStyle( "text/AuroraLogo" );

        SyntaxScheme syntaxScheme = new SyntaxScheme( true );
        syntaxScheme.setStyle( SyntaxScheme.RESERVED_WORD, new Style( new Color( Utils.getIntPref( "RESERVED_WORD" ) ) ) );
        syntaxScheme.setStyle( SyntaxScheme.RESERVED_WORD_2, new Style( new Color( Utils.getIntPref( "RESERVED_WORD_2" ) ) ) );
        syntaxScheme.setStyle( SyntaxScheme.IDENTIFIER, new Style( Color.GREEN.darker() ) );
        syntaxScheme.setStyle( SyntaxScheme.OPERATOR, new Style( Color.decode( "#9e6d03" ) ) );
        syntaxScheme.setStyle( SyntaxScheme.FUNCTION, new Style( new Color( Utils.getIntPref( "FUNCTION" ) ) ) );
        syntaxScheme.setStyle( SyntaxScheme.LITERAL_NUMBER_DECIMAL_INT, new Style( Color.MAGENTA.darker().darker() ) );
        syntaxScheme.setStyle( SyntaxScheme.LITERAL_NUMBER_FLOAT, new Style( Color.MAGENTA.darker().darker() ) );
        syntaxScheme.setStyle( SyntaxScheme.LITERAL_NUMBER_HEXADECIMAL, new Style( Color.MAGENTA.darker().darker() ) );
        syntaxScheme.setStyle( SyntaxScheme.COMMENT_EOL, new Style( Color.GRAY ) );
        syntaxScheme.setStyle( SyntaxScheme.COMMENT_MULTILINE, new Style( Color.GRAY.darker() ) );
        syntaxScheme.setStyle( SyntaxScheme.COMMENT_DOCUMENTATION, new Style( Color.BLUE.darker().darker() ) );
        textArea.setSyntaxScheme( syntaxScheme );
        
        scrollPane = new RTextScrollPane( textArea, true );
        ErrorStrip errorStrip = new ErrorStrip( textArea );
        
        painelCodigo.add( scrollPane, BorderLayout.CENTER );
        painelCodigo.add( errorStrip, BorderLayout.LINE_END );
        
        carregarTemplate( "exemplo", true );

    }

    private RSyntaxTextArea criarTextArea() {

        RSyntaxTextArea textArea = new RSyntaxTextArea();
        textArea.setTabSize( 4 );
        textArea.setCaretPosition( 0 );
        textArea.requestFocusInWindow();
        textArea.setMarkOccurrences( true );
        textArea.setCodeFoldingEnabled( true );
        textArea.setClearWhitespaceLinesEnabled( false );

        InputMap im = textArea.getInputMap();
        ActionMap am = textArea.getActionMap();
        im.put( KeyStroke.getKeyStroke( KeyEvent.VK_F6, 0 ), "decreaseFontSize" );
        am.put( "decreaseFontSize", new RSyntaxTextAreaEditorKit.DecreaseFontSizeAction() );
        im.put( KeyStroke.getKeyStroke( KeyEvent.VK_F7, 0 ), "increaseFontSize" );
        am.put( "increaseFontSize", new RSyntaxTextAreaEditorKit.IncreaseFontSizeAction() );

        int ctrlShift = InputEvent.CTRL_DOWN_MASK | InputEvent.SHIFT_DOWN_MASK;
        im.put( KeyStroke.getKeyStroke( KeyEvent.VK_C, ctrlShift ), "copyAsStyledText" );
        am.put( "copyAsStyledText", new RSyntaxTextAreaEditorKit.CopyCutAsStyledTextAction( false ) );

        return textArea;

    }

    private void executarCodigo() {
        
        try {
            
            String codigo = textArea.getText().trim();
            //String codigo = new String( textArea.getText().trim().getBytes(), StandardCharsets.ISO_8859_1 );
            
            if ( !codigo.isEmpty() ) {
                
                AuroraLogoLexer lexer = new AuroraLogoLexer( 
                        CharStreams.fromString( textArea.getText() ) );
                CommonTokenStream tokens = new CommonTokenStream( lexer );
                AuroraLogoParser parser = new AuroraLogoParser( tokens );
                ParseTree tree = parser.prog();

                DesenhistaAuroraLogoVisitor visitor = new DesenhistaAuroraLogoVisitor( tartaruga, this );
                visitor.visit( tree );
                
                //Utils.mostrarDados( null, parser, tree, true );
                
            } else {
                tartaruga.limpar();
            }
            
        } catch ( RecognitionException exc ) {
            tartaruga.limpar();
        } catch ( Exception exc ) {
            tartaruga.limpar();
        }
        
    }
    
    private void salvarArquivo( File arquivo ) {
        
        if ( arquivo != null ) {
            try ( PrintStream ps = new PrintStream( new FileOutputStream( arquivo ) ) ) {
                ps.print( textArea.getText() );
            } catch ( FileNotFoundException exc ) {
                exc.printStackTrace();
            }
        }
        
    }
    
    private void carregarTemplate( String template, boolean inicio ) {
        
        try ( Scanner s = new Scanner( 
                getClass().getResourceAsStream( "/br/com/davidbuzatto/auroralogo/templates/" 
                        + template + ".aulg" ), StandardCharsets.UTF_8 )) {
            carregar( s, inicio );
        }
        
    }
    
    private void carregarArquivo( File arquivo, boolean inicio ) {
        
        try ( Scanner s = new Scanner( arquivo, StandardCharsets.UTF_8 ) ) {
            carregar( s, inicio );
        } catch ( IOException exc ) {
            exc.printStackTrace();
        }
        
    }
    
    private void carregar( Scanner s, boolean inicio ) {
        
        StringBuilder sb = sb = new StringBuilder();
        sb.append( s.nextLine() );
        while ( s.hasNextLine() ) {
            sb.append( "\n" ).append( s.nextLine() );
        }
        
        String codigo = sb.toString();
        String data = new SimpleDateFormat( 
                "dd/MM/yyyy", Locale.forLanguageTag( "pt-BR" ) ).format( 
                        new Date() );
        
        codigo = codigo.replace( "<USUARIO>", System.getProperty( "user.name" ) );
        codigo = codigo.replace( "<DATA>", data );
        
        textArea.setText( codigo );
        textArea.setCaretPosition( inicio ? 0 : textArea.getText().length() );
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main( String args[] ) {

        try {
            UIManager.setLookAndFeel( new FlatIntelliJLaf() );
        } catch ( Exception exc ) {
        }
        
        Utils.preparePreferences();
        
        EventQueue.invokeLater( new Runnable() {
            public void run() {
                new JanelaPrincipal().setVisible( true );
            }
        } );

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar barraFerramentas;
    private javax.swing.JButton btnAbrir;
    private javax.swing.JButton btnExecutar;
    private javax.swing.JButton btnExecutarPasso;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSobre;
    private javax.swing.JPanel painelCodigo;
    private br.com.davidbuzatto.auroralogo.gui.PainelDesenho painelDesenho;
    private javax.swing.JToolBar.Separator separador1;
    private javax.swing.JToolBar.Separator separador2;
    // End of variables declaration//GEN-END:variables
}
